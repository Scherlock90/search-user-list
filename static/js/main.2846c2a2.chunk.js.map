{"version":3,"sources":["api/HTTP.ts","api/constants.ts","api/users-services/index.ts","api/users-services/constants.ts","api/ServiceFactory.ts","components/users-page/users-list/utils.ts","components/users-page/users-list/useUsersLists.ts","components/users-page/users-list/constants.ts","styles/device.ts","components/users-page/users-list/styles.tsx","components/users-page/users-list/index.tsx","components/users-page/search-bar/utils.ts","components/users-page/search-bar/styles.tsx","components/users-page/search-bar/index.tsx","components/users-page/styles.tsx","components/users-page/index.tsx","components/users-page/useUsersPage.ts","components/users-page/constants.ts","components/styles.tsx","components/index.tsx","reportWebVitals.ts","index.tsx"],"names":["axios","create","baseURL","getUsers","Http","get","services","Object","freeze","users","ServiceFactory","name","regexWhiteSpaces","value","replace","lowerCaseCompareLetters","letters","toLowerCase","allUsers","useUsersList","findUserPhrease","useState","data","setUsersList","message","setMessage","setUsers","takeAllUsers","useCallback","a","takeData","length","useEffect","searchingLetters","flow","filteredUsers","filter","includes","filterData","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","lightGreyColor","css","displayFlexLeft","deviceFont","typeDevice","font","deviceFlex","Container","styled","div","IndexUser","span","UserDetails","UserName","map","index","username","id","BASIC_PROPS_INPUT","type","placeholder","deviceSizeAndFont","maxWidth","deviceMaxWidth","StyledInput","input","onChange","deviceWidth","width","Content","Header","header","setFindUserPhrease","e","preventDefault","target","useUsersPage","devicePadding","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2846c2a2.chunk.js","sourcesContent":["import axios from 'axios'\n\nimport { baseURL } from \"./constants\";\n\nexport default axios.create({\n  baseURL\n})","export const baseURL = \"https://jsonplaceholder.typicode.com\";\n","import Http from \"../HTTP\";\n\nimport * as C from \"./constants\";\n\nexport default {\n  async getUsers() {\n    try {\n      return await Http.get(C.USERS_ENDPOINT);\n    } catch (err) {\n      return err && C.ERROR_MESSAGE;\n    }\n  },\n};\n","export const ERROR_MESSAGE = \"Something went wrong\";\n\nexport const USERS_ENDPOINT = \"/users\";\n","import { IServices } from \"./types\";\n\nimport users from \"./users-services\";\n\nconst services: IServices = Object.freeze({\n  users,\n});\n\nexport const ServiceFactory = Object.freeze({\n  get: (name: \"users\") => services[name],\n});\n","export const regexWhiteSpaces = (value: string): string => value.replace(/\\s/gi, \"\");\n\nexport const lowerCaseCompareLetters = (letters: string): string => letters.toLowerCase();\n","import { useCallback, useEffect, useState } from \"react\";\n\nimport flow from \"lodash.flow\";\n\nimport { ServiceFactory } from \"@api/ServiceFactory\";\n\nimport { TUsersDataList, TUseUsersList } from \"./types\";\n\nimport { lowerCaseCompareLetters, regexWhiteSpaces } from \"./utils\";\n\nimport * as C from \"./constants\";\n\nconst allUsers = ServiceFactory.get(C.USERS);\n\nexport const useUsersList = ({ findUserPhrease }: TUseUsersList<\"props\">): TUseUsersList<\"return\"> => {\n  const [data, setUsersList] = useState<TUsersDataList[] | []>([]);\n  const [message, setMessage] = useState<string | null>(null);\n  const [users, setUsers] = useState<TUsersDataList[] | []>([]);\n\n  const takeAllUsers = useCallback(async () => {\n    try {\n      const takeData = await allUsers.getUsers();\n      setUsersList(takeData?.data);\n      setUsers(takeData?.data);\n    } catch (err) {\n      setMessage(err);\n    }\n  }, [data.length === 0]);\n\n  const filterData = () => {\n    if (findUserPhrease !== null) {\n      const searchingLetters = flow([regexWhiteSpaces, lowerCaseCompareLetters])(findUserPhrease);\n      const filteredUsers = data.filter(({ name }) =>\n        flow([regexWhiteSpaces, lowerCaseCompareLetters])(name).includes(searchingLetters)\n      );\n\n      if (!findUserPhrease) return setUsers(data);\n\n      return setUsers(filteredUsers);\n    }\n  };\n\n  useEffect(() => {\n    (async () => await takeAllUsers())();\n  }, []);\n\n  useEffect(() => {\n    findUserPhrease !== null && filterData();\n  }, [findUserPhrease]);\n\n  return { message, data, users };\n};\n","export const USERS = \"users\";\nexport const LOADING = \"Please wait loading data...\";\n","const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\",\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n};\n","import styled, { css } from \"styled-components\";\n\nimport { device } from \"@styles/device\";\n\nconst lightGreyColor = css`\n  color: #cccccc;\n`;\n\nconst displayFlexLeft = css`\n  display: flex;\n  justify-content: left;\n`;\n\nconst deviceFont = (\n  typeDevice: \"mobileS\" | \"mobileL\" | \"tablet\" | \"laptop\" | \"laptopL\" | \"desktop\",\n  font: number\n) => css`\n  @media ${device[typeDevice]} {\n    font-size: ${font}rem;\n  }\n`;\n\nconst deviceFlex = (typeDevice: \"mobileS\" | \"mobileL\" | \"tablet\" | \"laptop\" | \"laptopL\" | \"desktop\") => css`\n  @media ${device[typeDevice]} {\n    ${displayFlexLeft}\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  font-size: 1.5rem;\n  width: 100%;\n  padding: 1rem;\n\n  @media ${device.mobileS} {\n    font-size: 1rem;\n    padding: 0.5rem 0rem;\n  }\n\n  @media ${device.mobileL} {\n    font-size: 1.1rem;\n    padding: 0.5rem 0rem;\n  }\n\n  ${deviceFont(\"tablet\", 1.2)}\n  ${deviceFont(\"laptop\", 1.5)}\n  ${deviceFont(\"laptopL\", 1.5)}\n  ${deviceFont(\"desktop\", 1.5)}\n`;\n\nexport const IndexUser = styled.span`\n  width: 10%;\n  ${lightGreyColor}\n`;\n\nexport const UserDetails = styled.span`\n  width: 90%;\n  display: flex;\n\n  @media ${device.mobileS} {\n    display: grid;\n    justify-content: center;\n  }\n\n  @media ${device.mobileL} {\n    display: flex;\n    justify-content: center;\n  }\n\n  ${deviceFlex(\"tablet\")}\n  ${deviceFlex(\"laptop\")}\n  ${deviceFlex(\"laptopL\")}\n  ${deviceFlex(\"desktop\")}\n`;\n\nexport const UserName = styled.span`\n  width: 30%;\n  align-items: center;\n  font-size: 1.2rem;\n  display: flex;\n  margin-left: 1rem;\n  ${lightGreyColor}\n  ${deviceFont(\"mobileS\", 0.9)}\n  ${deviceFont(\"mobileL\", 0.9)}\n  ${deviceFont(\"tablet\", 1)}\n  ${deviceFont(\"laptop\", 1.2)}\n  ${deviceFont(\"laptopL\", 1.2)}\n  ${deviceFont(\"desktop\", 1.2)}\n`;\n","import { useUsersList } from \"./useUsersLists\";\n\nimport { TUsersListProps } from \"./types\";\n\nimport * as C from \"./constants\";\n\nimport * as S from \"./styles\";\n\nexport default ({ findUserPhrease }: TUsersListProps) => {\n  const { message, users } = useUsersList({ findUserPhrease });\n\n  if (message !== null) return <div>{message}</div>;\n  if (users.length <= 0) return <div>{C.LOADING}</div>;\n\n  return (\n    <>\n      {users.map(({ name, username, id }, index) => (\n        <S.Container key={`${id}${name}`}>\n          <S.IndexUser>{index + 1}.</S.IndexUser>\n          <S.UserDetails>\n            {name} <S.UserName>@{username}</S.UserName>\n          </S.UserDetails>\n        </S.Container>\n      ))}\n    </>\n  );\n};\n","export const BASIC_PROPS_INPUT = {\n  type: \"text\",\n  placeholder: \"Search by user name...\",\n};\n","import styled, { css } from \"styled-components\";\n\nimport { device } from \"@styles/device\";\n\nconst deviceSizeAndFont = (typeDevice: \"mobileS\" | \"mobileL\", maxWidth: number, font: number) => css`\n  @media ${device[typeDevice]} {\n    max-width: ${maxWidth}px;\n    font-size: ${font}rem;\n  }\n`;\n\nconst deviceMaxWidth = (typeDevice: \"tablet\" | \"laptop\" | \"laptopL\" | \"desktop\", maxWidth: number) => css`\n  @media ${device[typeDevice]} {\n    max-width: ${maxWidth}px;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  margin-bottom: 1rem;\n  padding: 1rem;\n  height: 0.5rem;\n  width: 100%;\n  font-size: 1.2rem;\n\n  ${deviceSizeAndFont(\"mobileS\", 280, 1)}\n  ${deviceSizeAndFont(\"mobileL\", 390, 1)}\n  ${deviceMaxWidth(\"tablet\", 430)}\n  ${deviceMaxWidth(\"laptop\", 500)}\n  ${deviceMaxWidth(\"laptopL\", 600)}\n  ${deviceMaxWidth(\"desktop\", 800)}\n`;\n","import { SearchBarProps } from \"./types\";\n\nimport { BASIC_PROPS_INPUT } from \"./utils\";\n\nimport * as S from \"./styles\";\n\nexport default ({ onChange }: SearchBarProps) => <S.StyledInput {...{ ...BASIC_PROPS_INPUT, onChange }} />;\n","import styled, { css } from \"styled-components\";\n\nimport { device } from \"@styles/device\";\n\nconst deviceWidth = (\n  typeDevice: \"mobileS\" | \"mobileL\" | \"tablet\" | \"laptop\" | \"laptopL\" | \"desktop\",\n  width: number\n) => css`\n  @media ${device[typeDevice]} {\n    width: ${width}%;\n  }\n`;\n\nexport const Content = styled.div`\n  text-align: center;\n  ${deviceWidth(\"mobileS\", 100)}\n  ${deviceWidth(\"mobileL\", 60)}\n  ${deviceWidth(\"tablet\", 50)}\n  ${deviceWidth(\"laptop\", 40)}\n  ${deviceWidth(\"laptopL\", 30)}\n  ${deviceWidth(\"desktop\", 20)}\n`;\n\nexport const Header = styled.header`\n  padding-top: 1rem;\n  height: 3.5rem;\n  font-size: 2rem;\n`;\n","import React from \"react\";\n\nimport UsersList from \"./users-list\";\nimport SearchBar from \"./search-bar\";\n\nimport { useUsersPage } from \"./useUsersPage\";\n\nimport * as C from \"./constants\";\n\nimport * as S from \"./styles\";\n\nexport default () => {\n  const { findUserPhrease, onChange } = useUsersPage();\n\n  return (\n    <S.Content>\n      <S.Header>{C.USERS_LIST}</S.Header>\n      <SearchBar {...{ onChange }} />\n      <UsersList {...{ findUserPhrease }} />\n    </S.Content>\n  );\n};\n","import { ChangeEvent, useState } from \"react\";\n\nimport { TUseUsersPage } from \"./types\";\n\nexport const useUsersPage = (): TUseUsersPage => {\n  const [findUserPhrease, setFindUserPhrease] = useState<string | null>(null);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n    e.preventDefault();\n    setFindUserPhrease(e.target.value);\n  };\n\n  return { findUserPhrease, onChange };\n};\n","export const USERS_LIST = \"Users list\";\n","import styled, { css } from \"styled-components\";\n\nimport { device } from \"@styles/device\";\n\nconst devicePadding = (\n  typeDevice: \"mobileS\" | \"mobileL\" | \"tablet\" | \"laptop\" | \"laptopL\" | \"desktop\",\n  padding: number\n) => css`\n  @media ${device[typeDevice]} {\n    padding: ${padding}rem;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100%;\n  justify-content: center;\n\n  ${devicePadding(\"mobileS\", 0)}\n  ${devicePadding(\"mobileL\", 0)}\n  ${devicePadding(\"tablet\", 2)}\n  ${devicePadding(\"laptop\", 2)}\n  ${devicePadding(\"laptopL\", 2)}\n  ${devicePadding(\"desktop\", 2)}\n`;\n","import React from \"react\";\n\nimport UsersPage from \"./users-page\";\n\nimport * as S from \"./styles\";\n\nexport default () => (\n  <S.Container>\n    <UsersPage />\n  </S.Container>\n);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}